extension plpgsql:
  description: PL/pgSQL procedural language
  owner: postgres
  schema: pg_catalog
  version: '1.0'
schema private:
  function get_session_variable(var_name text):
    language: plpgsql
    owner: postgres
    returns: text
    security_definer: true
    source: "\n  begin\n    return pg_catalog.current_setting('private.' || var_name);\n\
      \  end;\n"
  function get_session_variable(var_name text, default_value text):
    language: plpgsql
    owner: postgres
    returns: text
    security_definer: true
    source: "\n  begin\n    return pg_catalog.current_setting('private.' || var_name);\n\
      \  exception\n    when undefined_object then\n      return default_value;\n\
      \  end;\n"
  function set_session(ab_sid bigint):
    language: plpgsql
    owner: postgres
    returns: void
    security_definer: true
    source: "\n  declare\n    srec record;\n  begin\n    select * into strict srec\
      \ from auto.session where ab_session_id = ab_sid;\n    perform pg_catalog.set_config('private.audit_user',\
      \ srec.login_id::text, false);\n    perform pg_catalog.set_config('private.audit_session',\
      \ srec.id::text, false);\n    if srec.tzname is not null then\n      perform\
      \ pg_catalog.set_config('timezone', srec.tzname, false);\n    end if;\n  end;\n"
  function set_session_variable(var_name text, var_value text):
    language: plpgsql
    owner: postgres
    returns: void
    security_definer: true
    source: "\n  begin\n    perform pg_catalog.set_config('private.' || var_name,\
      \ var_value, false);\n  end;\n"
  owner: postgres
schema public:
  description: standard public schema
  function audit_full():
    description: Provides created/modified values for audit columns.
    language: plpgsql
    owner: postgres
    returns: trigger
    security_definer: true
    source: "\nDECLARE\n  user_id integer := private.get_session_variable('audit_user',\n\
      \    '0')::integer;\n  rv record;\nBEGIN\n  IF TG_OP = 'INSERT' THEN\n    NEW.created_timestamp\
      \ = CURRENT_TIMESTAMP;\n    NEW.created_by_user = user_id;\n    NEW.modified_timestamp\
      \ = CURRENT_TIMESTAMP;\n    NEW.modified_by_user = user_id;\n    rv = NEW;\n\
      \  ELSIF TG_OP = 'UPDATE' THEN\n    NEW.created_timestamp = OLD.created_timestamp;\n\
      \    NEW.created_by_user = OLD.created_by_user;\n    NEW.modified_timestamp\
      \ = CURRENT_TIMESTAMP;\n    NEW.modified_by_user = user_id;\n    rv = NEW;\n\
      \  ELSE\n    rv = OLD;\n  END IF;\n  perform pg_notify(TG_TABLE_NAME || '_change',\n\
      \    json_build_object('operation',TG_OP,'pk',rv.id,'id',user_id)::text);\n\
      \  RETURN rv;\nEND"
  function audit_fullmodified():
    description: Provides created values for audit columns.
    language: plpgsql
    owner: postgres
    returns: trigger
    security_definer: true
    source: "\nDECLARE\n  user_id integer := private.get_session_variable('audit_user',\n\
      \    '0')::integer;\n  rv record;\nBEGIN\n  if TG_OP = 'INSERT' or TG_OP = 'UPDATE'\
      \ THEN\n    NEW.modified_timestamp = CURRENT_TIMESTAMP;\n    NEW.modified_by_user\
      \ = user_id;\n    rv = NEW;\n  else\n    rv = OLD;\n  END IF;\n  perform pg_notify(TG_TABLE_NAME\
      \ || '_change',\n    json_build_object('operation',TG_OP,'pk',rv.id,'id',user_id)::text);\n\
      \  RETURN rv;\nEND"
  owner: postgres
  privileges:
  - postgres:
    - all
  - PUBLIC:
    - all
  sequence activity_id_seq:
    cache_value: 1
    increment_by: 1
    max_value: null
    min_value: null
    owner: postgres
    owner_column: id
    owner_table: activity
    start_value: 1
  sequence login_id_seq:
    cache_value: 1
    increment_by: 1
    max_value: null
    min_value: null
    owner: postgres
    owner_column: id
    owner_table: login
    start_value: 1
  sequence loginrole_id_seq:
    cache_value: 1
    increment_by: 1
    max_value: null
    min_value: null
    owner: postgres
    owner_column: id
    owner_table: loginrole
    start_value: 1
  sequence role_id_seq:
    cache_value: 1
    increment_by: 1
    max_value: null
    min_value: null
    owner: postgres
    owner_column: id
    owner_table: role
    start_value: 1
  sequence session_id_seq:
    cache_value: 1
    increment_by: 1
    max_value: null
    min_value: null
    owner: postgres
    owner_column: id
    owner_table: session
    start_value: 1
  sequence topic_id_seq:
    cache_value: 1
    increment_by: 1
    max_value: null
    min_value: null
    owner: postgres
    owner_column: id
    owner_table: topic
    start_value: 1
  sequence topicrole_id_seq:
    cache_value: 1
    increment_by: 1
    max_value: null
    min_value: null
    owner: postgres
    owner_column: id
    owner_table: topicrole
    start_value: 1
  table activity:
    columns:
    - id:
        default: nextval('activity_id_seq'::regclass)
        not_null: true
        type: integer
    - session_id:
        type: integer
    - topic_name:
        type: text
    - type_id:
        type: text
    - allow:
        type: boolean
    - modified_by_user:
        not_null: true
        type: integer
    - modified_timestamp:
        not_null: true
        type: timestamp with time zone
    foreign_keys:
      activity_session_id_fkey:
        columns:
        - session_id
        references:
          columns:
          - id
          schema: public
          table: session
      activity_type_id_fkey:
        columns:
        - type_id
        references:
          columns:
          - id
          schema: public
          table: activity_type
    owner: postgres
    primary_key:
      activity_pkey:
        columns:
        - id
    triggers:
      activity_20_audit_fullmodified:
        events:
        - insert
        - update
        - delete
        level: row
        procedure: audit_fullmodified()
        timing: before
  table activity_type:
    columns:
    - id:
        not_null: true
        type: text
    - name:
        type: text
    - description:
        type: text
    owner: postgres
    primary_key:
      activity_type_pkey:
        columns:
        - id
  table login:
    columns:
    - id:
        default: nextval('login_id_seq'::regclass)
        not_null: true
        type: integer
    - login:
        type: text
    - fullname:
        type: text
    - password:
        type: text
    - tzname:
        type: text
    - modified_by_user:
        not_null: true
        type: integer
    - modified_timestamp:
        not_null: true
        type: timestamp with time zone
    owner: postgres
    primary_key:
      login_pkey:
        columns:
        - id
    triggers:
      login_20_audit_fullmodified:
        events:
        - insert
        - update
        - delete
        level: row
        procedure: audit_fullmodified()
        timing: before
    unique_constraints:
      login_login_key:
        columns:
        - login
  table loginrole:
    columns:
    - id:
        default: nextval('loginrole_id_seq'::regclass)
        not_null: true
        type: integer
    - login_id:
        type: integer
    - role_id:
        type: integer
    - modified_by_user:
        not_null: true
        type: integer
    - modified_timestamp:
        not_null: true
        type: timestamp with time zone
    foreign_keys:
      loginrole_login_id_fkey:
        columns:
        - login_id
        references:
          columns:
          - id
          schema: public
          table: login
    owner: postgres
    primary_key:
      loginrole_pkey:
        columns:
        - id
    triggers:
      loginrole_20_audit_fullmodified:
        events:
        - insert
        - update
        - delete
        level: row
        procedure: audit_fullmodified()
        timing: before
    unique_constraints:
      loginrole_login_id_role_id:
        columns:
        - login_id
        - role_id
      loginrole_role_id_key:
        columns:
        - role_id
  table role:
    columns:
    - id:
        default: nextval('role_id_seq'::regclass)
        not_null: true
        type: integer
    - name:
        type: text
    - description:
        type: text
    - modified_by_user:
        not_null: true
        type: integer
    - modified_timestamp:
        not_null: true
        type: timestamp with time zone
    foreign_keys:
      role_id_fkey:
        columns:
        - id
        references:
          columns:
          - role_id
          schema: public
          table: loginrole
    owner: postgres
    primary_key:
      role_pkey:
        columns:
        - id
    triggers:
      role_20_audit_fullmodified:
        events:
        - insert
        - update
        - delete
        level: row
        procedure: audit_fullmodified()
        timing: before
  table session:
    columns:
    - id:
        default: nextval('session_id_seq'::regclass)
        not_null: true
        type: integer
    - login_id:
        type: integer
    - ab_session_id:
        type: bigint
    - tzname:
        type: text
    - created_by_user:
        not_null: true
        type: integer
    - created_timestamp:
        not_null: true
        type: timestamp with time zone
    - modified_by_user:
        not_null: true
        type: integer
    - modified_timestamp:
        not_null: true
        type: timestamp with time zone
    foreign_keys:
      session_login_id_fkey:
        columns:
        - login_id
        references:
          columns:
          - id
          schema: public
          table: login
    owner: postgres
    primary_key:
      session_pkey:
        columns:
        - id
    triggers:
      session_20_audit_full:
        events:
        - insert
        - update
        - delete
        level: row
        procedure: audit_full()
        timing: before
    unique_constraints:
      session_ab_session_id:
        columns:
        - ab_session_id
      session_ab_session_id_key:
        columns:
        - ab_session_id
  table topic:
    columns:
    - id:
        default: nextval('topic_id_seq'::regclass)
        not_null: true
        type: integer
    - name:
        type: text
    - description:
        type: text
    - modified_by_user:
        not_null: true
        type: integer
    - modified_timestamp:
        not_null: true
        type: timestamp with time zone
    owner: postgres
    primary_key:
      topic_pkey:
        columns:
        - id
    triggers:
      topic_20_audit_fullmodified:
        events:
        - insert
        - update
        - delete
        level: row
        procedure: audit_fullmodified()
        timing: before
  table topicrole:
    columns:
    - id:
        default: nextval('topicrole_id_seq'::regclass)
        not_null: true
        type: integer
    - topic_id:
        not_null: true
        type: integer
    - role_id:
        not_null: true
        type: integer
    - type_id:
        not_null: true
        type: text
    - allow:
        type: boolean
    - modified_by_user:
        not_null: true
        type: integer
    - modified_timestamp:
        not_null: true
        type: timestamp with time zone
    foreign_keys:
      topicrole_role_id_fkey:
        columns:
        - role_id
        references:
          columns:
          - id
          schema: public
          table: role
      topicrole_topic_id_fkey:
        columns:
        - topic_id
        references:
          columns:
          - id
          schema: public
          table: topic
      topicrole_type_id_fkey:
        columns:
        - type_id
        references:
          columns:
          - id
          schema: public
          table: activity_type
    owner: postgres
    primary_key:
      topicrole_pkey:
        columns:
        - id
    triggers:
      topicrole_20_audit_fullmodified:
        events:
        - insert
        - update
        - delete
        level: row
        procedure: audit_fullmodified()
        timing: before
    unique_constraints:
      topicrole_topic_id_role_id_type_id:
        columns:
        - topic_id
        - role_id
        - allow

